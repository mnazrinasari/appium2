name: Maven Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn clean install
        env:
          MAVEN_OPTS: "-Xmx2g"

      # Step 5: Deploy the TestNG report to GitHub Pages
      - name: Deploy TestNG Report to GitHub Pages
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Clone the repository and switch to gh-pages branch
          git clone https://github.com/${{ github.repository }}.git github-pages
          cd github-pages
          
          # Create gh-pages branch if it doesn't exist or switch to it
          git checkout -b gh-pages || git checkout gh-pages
          
          # Pull the latest changes from the remote gh-pages branch with rebase
          git pull --rebase origin gh-pages
          
          # Create the surefire-report directory (if not already there)
          mkdir -p surefire-report

          # Copy the emailable-report.html into the surefire-report directory
          cp -r ../target/surefire-reports/emailable-report.html surefire-report/
          
          # Add, commit, and push the changes to the gh-pages branch
          git add .
          git commit -m "Deploy TestNG emailable report"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages

      # Step 6: Send email with the link to the deployed emailable report
      - name: Send email with report link using Sendinblue API
        run: |
          curl -X POST https://api.sendinblue.com/v3/smtp/email \
            -H "api-key: ${{ secrets.SENDINBLUE_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "sender": { "email": "no-reply@mydomain.com" },
              "to": [{ "email": "recipient@example.com" }],
              "subject": "TestNG Tests Completed - Emailable Report",
              "htmlContent": "<html><body><p>Your TestNG tests have completed successfully. Check the report in the following link: <a href=\"https://github.com/${{ github.repository }}/blob/gh-pages/surefire-report/emailable-report.html\">TestNG Emailable Report</a></p></body></html>"
            }'
